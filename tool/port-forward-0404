#!/bin/bash

# variables:
P80="9080"
P443="9443"

#DBIP="ubuntu@10.134.161.155"
# This private IP gives trouble for port forwarding, change to public IP:
DBIP="ubuntu@54.250.20.232"

#################################################################
#
# Change this file to executable.
#   chmod 700 this-file
#
# on ec2 instance, run this-file to do port forwarding
# forward (http) 80 to 9080,
# forward (http) 443 to 9443,
# so node.js can use 9080/9443 which need no sudo
# forward local 6379/redis 27017/mongodb to remote db server's
# so db can be accessed locally.


# to make it auto run at rebooting:
#
## Create /etc/init/myport.conf
## 
## sudo vim /etc/init/myport.conf
## 
## with content like the following:
## 
##     description     "forward port 80 to 9080 for muji project"
##     start on startup
##     task
##     exec /path/to/this/file/name
#
#
#################################################################


# forward 80 to 9080
sudo iptables -t nat -I PREROUTING -p tcp        --dport 80 -j REDIRECT --to-ports $P80
sudo iptables -t nat -I OUTPUT     -p tcp -o lo  --dport 80 -j REDIRECT --to-ports $P80

# 2016 0109, 2017 0906
# forward 443 to 9443
sudo iptables -t nat -I PREROUTING -p tcp        --dport 443 -j REDIRECT --to-ports $P443
sudo iptables -t nat -I OUTPUT     -p tcp -o lo  --dport 443 -j REDIRECT --to-ports $P443

# 2016 0305, 2017 0906
# forward 27017 to remote mongodb server's localhost:27017
# forward 6379 to remote redis server's localhost:6379
# so local application would use db api's default setting, 
# same as remote db server

#autossh -L 9017:localhost:27017 ubuntu@10.134.145.167
#autossh -L 9017:localhost:27017 -L 6379:localhost:6379 ubuntu@10.134.161.155
## how about keep port number? 2016 0411
#  -nNT : to background
autossh -L 27017:localhost:27017 -L 6379:localhost:6379 $DBIP

